---
title: Robust recovery of sparse signal under very limited measurements
author: Dilawar Singh
institute: NCBS Bangalore
email: dilawars@ncbs.res.in
geometry: right=5cm, marginparwidth=4cm
date : \today 
fontfamily: libertine
header-includes:
    - \usepackage{pgfplots}
---

# Summary 

If $x_N$ (size $N$) is $S-sparse$ then an under-determined system $A_{kN}x_{N}
=b_k$ -- where $b$ is vector of $k$ observations -- can be solved _exactly_
given that $A$ (__mesurement matrix__) has following properties:

- $\left\Vert y\right\Vert^2 \sim = \left\Vert x \right\Vert ^2$ where $y = A x$
  for any sparse signal $x$ i.e application of measurements matrix does not
  change the length of sparse signal $x$ 'very much'. See Restricted Isometric
  Property in @sec:rip .


Lets there is a sparse signal $x$ of length $N$. Its sparse. We take a
dot-product of x with a random vector $A_i$ of size N i.e. $b_i = A_i * x$. We
make $k$ such measurements. We can put all k $A_i$ into a matrix $A$ and
represent the process by a linear system:

$$\begin{bmatrix} A_1 \\ A_2 \\ \vdots \\ A_k \end{bmatrix} * x = 
\begin{bmatrix} b_1 \\ b_2 \\ \vdots \\ b_k \end{bmatrix} $$ {#eq:underdetermined_system}

Note that each $A_i$ has the dimension $1 \times N$. We can rewrite
@eq:underdetermined_system as following:

$$A x = b$$ {#eq:underdetermined_system_compact} where dimension of $A$ are $k
\times N$ and $k << N$. This is an under-determined system with the condition
that $x$ is sparse. Can we recover $x$ (of size N) from b (of size k $<<N$)? 

Figure @fig:system shows a real system. Compressed sensing says that $x$ can be
recovered by solving the following linear program.

$$\min_x \left\Vert x \right\Vert_1 \; \text{given} \; Ax = b$$ {#eq:cs_linprog}

\newpage

# A demonstration using Python

Data for @fig:cs_time_domain is generated by script `./compressed_sensing.py`
and for @fig:cs_freq_domain, data is generated by script
`./magic_reconstruction.py`. Both of these scripts also generate similar
figures.

__Dependencies__ In addition to `scipy`, `numpy`, and `matplotlib`, we also
need [pyCSalgo](https://github.com/nikcleju/pyCSalgos). It is available via
pip: `pip install pyCSalgo --user`.

## Process

1. __input__ : sparse signal x of size N 
2. Generate a random matrix (__measurement matrix__) $A$ of size $k\times N$.
3. Make $k$ measurements of $x$ using $A$. That is $b = A x$. Note that each
   measurement of $x$ (i.e. entry of $b$) is some linear combination of values
   of $x$ given by $A_i x$ where $A_i$ is ith row.
4. Now find $x$ by solving $\min_x \left\Vert x \right\Vert_1 \text{given}\; Ax=b$.

For step 4, we are using function `l1eq_pd` from Python library `pyCSalgo`.
This is reimplementation of `l1magic` routine written in Matlab by
[Candes](https://statweb.stanford.edu/~candes/l1magic/). When $k >> 2S$ where $S$ 
is the sparsity of $x$, we can recover $x$ quite well. In practice, $k \ge 4S$ almost
always gives exact result.


## Sparse in time domain

![__x__ is the sparse signal of length 256. Using measurements matrix __A__, we
made 64 random measurements of $x$ namely __b__. The sparse solution of
@eq:underdetermined_system_compact is the solution of $\min_x \left\Vert x
\right\Vert_1 \text{given}\; Ax =b$. ](./figure_compressend_sensing.pdf){#fig:system}

__Solution__

![Solution by CS and original signal .
](./figure_solution.pdf){#fig:cs_time_domain}


## Sparse in Fourier domain

![CS solution when signal is sparse in Forier domain. Note that we took 200
samples for a singal of size 2000. The recovery is pretty good.
](./figure_compressend_sensing_DCT.pdf){#fig:cs_freq_domain}


# Mathematical definitions

## Restricted isometric property (RIP) {#sec:rip }

Restricted isometric property (RIP) of a matrix $A$ is defined as the
following.

Given $\delta_s \in (0,1)$, for any sub-matrix $A_s$ of $A$, and for any sparse
vector $y$, if following holds

$$ (1-\delta_s) \left\Vert y \right\Vert^2 \leq \left\Vert A_s y \right\Vert ^2
\leq (1+\delta_s) \left\Vert y \right\Vert ^2 $$

then matrix $A$ is said to satify $s-$restricted isometric property with
restricted isometric constant $\delta_s$. _Note that a matrix A with such a
property does not change the length of singal $x$ 'very much'_. This enables us
to sense two different sparse signal $x_1$ and $x_2$ such that $A x_1$ and $A
x_2$ are almost likely to be different.


# References {#sec:reference}

To learn about compressed sensing, I recommend following articles

- A very good motivational article
  [www.ams.org/samplings/math-history/hap7-pixel.pdf](http://www.ams.org/samplings/math-history/hap7-pixel.pdf)
  . (last accessed Wed 30 Aug 2017 11:14:35 AM IST)
- A nice tutorial using Matlab [CodeProject
  article](https://www.codeproject.com/Articles/852910/Compressed-Sensing-Intro-Tutorial-w-Matlab).
- Terry Tao Blog [with tag Compressed
  sensing](https://terrytao.wordpress.com/tag/compressed-sensing/).

There are many many other great articles and papers on this subject. 
