module Jeera.Skel where

-- Haskell module generated by the BNF converter

import Jeera.Abs
import Jeera.ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIDENT :: IDENT -> Result
transIDENT x = case x of
  IDENT str  -> failure x


transDesign :: Design -> Result
transDesign x = case x of
  Design devicedecls  -> failure x


transDeviceDecl :: DeviceDecl -> Result
transDeviceDecl x = case x of
  DeviceDecl devicetype assignments  -> failure x


transDeviceType :: DeviceType -> Result
transDeviceType x = case x of
  DeviceType_Registor  -> failure x
  DeviceType_Capacitor  -> failure x
  DeviceType_Inductance  -> failure x
  DeviceType_Voltage  -> failure x


transAssignment :: Assignment -> Result
transAssignment x = case x of
  Assignment ident1 ident2  -> failure x



